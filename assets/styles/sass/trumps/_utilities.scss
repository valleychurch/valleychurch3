// Clearfix
.u-cf                   { @include clearfix; }

// Grid ordering
@each $breakpoint in map-keys($VCbreakpoints) {
  @include breakpoint($breakpoint) {
    @for $i from 0 through 12 {
      .u-grid-#{$i}--#{$breakpoint} {
        order: #{$i};
      }
    }
  }
}

.u-flex-top             { align-items: flex-start; }
.u-flex-bottom          { align-items: flex-end; }
.u-flex-center          { align-items: center; }
.u-flex-stretch         { align-items: stretch; }
.u-flex-baseline        { align-items: baseline; }

// Floats
.u-pull-left            { @include pull-left; }
.u-pull-right           { @include pull-right; }

@each $breakpoint in map-keys($VCbreakpoints) {
  @include breakpoint($breakpoint) {
    .u-pull-left--#{$breakpoint}   { @include pull-left; }
    .u-pull-right--#{$breakpoint}  { @include pull-right; }
  }
}

// Displays
.u-center-block         { @include center-block; }

@each $breakpoint in map-keys($VCbreakpoints) {
  @include breakpoint($breakpoint) {
    .u-center-block--#{$breakpoint}   { @include center-block; }
  }
}

.u-hide                 { display: none; }
.u-show                 { display: block; }
.u-show-inline          { display: inline; }
.u-show-inline-block    { display: inline; }

@each $breakpoint in map-keys($VCbreakpoints) {
  @include breakpoint($breakpoint) {
    .u-hide--#{$breakpoint}                   { display: none; }
    .u-show--#{$breakpoint}                   { display: block; }
    .u-show-inline--#{$breakpoint}            { display: inline; }
    .u-show-inline-block--#{$breakpoint}      { display: inline-block; }
  }
}


// Text alignment
.u-text-left            { text-align: left !important; }
.u-text-right           { text-align: right !important; }
.u-text-center          { text-align: center !important; }
.u-text-justify         { text-align: justify !important; }
.u-text-nowrap          { white-space: nowrap !important; }

@each $breakpoint in map-keys($VCbreakpoints) {
  @include breakpoint($breakpoint) {
    .u-text-left--#{$breakpoint}    { text-align: left; }
    .u-text-right--#{$breakpoint}   { text-align: right; }
    .u-text-center--#{$breakpoint}  { text-align: center; }
    .u-text-justify--#{$breakpoint} { text-align: justify !important; }
    .u-text-nowrap--#{$breakpoint}  { white-space: nowrap !important; }
  }
}

.u-text-lowercase       { text-transform: lowercase; }
.u-text-uppercase       { text-transform: uppercase; }
.u-text-capitalize      { text-transform: capitalize; }


//Line height
.u-line-height--none    { line-height: 1; }
.u-line-height--small   { line-height: 1.35; }

//Brand colours
.u-text-twitter,
.fa-twitter,
.fa-twitter-square {
  color: #55acee;
}

.u-background-twitter {
  color: #55acee;
}

.u-text-facebook,
.fa-facebook,
.fa-facebook-official,
.fa-facebook-square {
  color: #3b5998;
}

.u-background-facebook {
  color: #3b5998;
}

.u-text-instagram,
.fa-instagram {
  color: #405de6;
}

.u-background-instagram {
  color: #405de6;
}

//Text colours
//Below `Brand colours` so these take priority
.u-text-white           { color: $VCwhite; }
.u-text-black           { color: $VCblack; }
.u-text-grey            { color: $VCgrey; }
.u-text-muted           { color: greyscale(5); }

@each $name, $colour in $VCcolours {
  .u-text-#{$name}  { color: map-get($colour, base); }

  @each $tone in map-keys(map-get($VCcolours, $name)) {
    .u-text-#{$name}--#{$tone} {
      color: map-get(map-get($VCcolours, $name), $tone);
    }
  }
}


.u-text-shadow          { @include text-shadow; }

.u-text-light           { font-weight: $VCfont-light; }
.u-text-normal          { font-weight: $VCfont-normal; }
.u-text-medium          { font-weight: $VCfont-medium; }
.u-text-bold            { font-weight: $VCfont-bold; }


// Background colours
.u-background-white     { background-color: $VCwhite; }
.u-background-black     { background-color: $VCblack; }
.u-background-grey      { background-color: $VCgrey; }

@each $name, $colour in $VCcolours {
  .u-background-#{$name}  { background-color: map-get($colour, base); }

  @each $tone in map-keys(map-get($VCcolours, $name)) {
    .u-background-#{$name}--#{$tone} {
      background-color: map-get(map-get($VCcolours, $name), $tone);
    }
  }
}

@each $name, $colour in $VCgrayscale-colours {
  .u-background-grey--#{$name}  { background-color: $colour; }
}


//Margins
.u-margin,
.u-margin-bottom {
  margin-bottom: $VCbase;

  &--quadruple { margin-bottom: quadruple($VCbase) !important; }
  &--double    { margin-bottom: double($VCbase) !important; }
  &--half      { margin-bottom: half($VCbase) !important; }
  &--third     { margin-bottom: third($VCbase) !important; }
  &--quarter   { margin-bottom: quarter($VCbase) !important; }
  &--none      { margin-bottom: 0 !important; }
}

.u-margin-top {
  margin-top: $VCbase;

  &--quadruple { margin-top: quadruple($VCbase) !important; }
  &--double    { margin-top: double($VCbase) !important; }
  &--half      { margin-top: half($VCbase) !important; }
  &--third     { margin-top: third($VCbase) !important; }
  &--quarter   { margin-top: quarter($VCbase) !important; }
  &--none      { margin-top: 0 !important; }
}

@each $breakpoint in map-keys($VCbreakpoints) {
  @include breakpoint($breakpoint) {
    .u-margin--#{$breakpoint},
    .u-margin-bottom--#{$breakpoint} {
      margin-bottom: $VCbase;

      &--quadruple { margin-bottom: quadruple($VCbase) !important; }
      &--double    { margin-bottom: double($VCbase) !important; }
      &--half      { margin-bottom: half($VCbase) !important; }
      &--third     { margin-bottom: third($VCbase) !important; }
      &--quarter   { margin-bottom: quarter($VCbase) !important; }
      &--none      { margin-bottom: 0 !important; }
    }

    .u-margin-top--#{$breakpoint} {
      margin-top: $VCbase;

      &--quadruple { margin-top: quadruple($VCbase) !important; }
      &--double    { margin-top: double($VCbase) !important; }
      &--half      { margin-top: half($VCbase) !important; }
      &--third     { margin-top: third($VCbase) !important; }
      &--quarter   { margin-top: quarter($VCbase) !important; }
      &--none      { margin-top: 0 !important; }
    }
  }
}


//Visually hidden
.u-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}
