// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.
@mixin make-grid-columns($columns: $VCgrid-columns, $gutter: $VCgrid-gutter, $breakpoints: $VCbreakpoints) {

  // Common properties for all breakpoints
  [class^="o-col"] {
    @include make-col-ready;
  }

  $breakpoint-counter: 0;
  @each $breakpoint in map-keys($breakpoints) {
    $breakpoint-counter: ($breakpoint-counter + 1);

    @include breakpoint($breakpoint) {

      // Create generic `.o-col-{$breakpoint} classes for equal-width columns
      @if $VCenable-flex {
        .o-col\@#{$breakpoint} {
          // position: relative;
          @include make-col-ready;
          flex-basis: 0;
          flex-grow: 1;
          max-width: 100%;
          // min-height: 1px;
          // padding-right: ($gutter / 2);
          // padding-left: ($gutter / 2);
        }
      }

      // Loop through column count and make `.o-col-{$i}@{$breakpoint} classes
      // i.e. `.o-col-3@sm`
      @for $i from 1 through $columns {
        .o-col-#{$i}\@#{$breakpoint} {
          @include make-col($i, $columns, $gutter);
        }
      }

      @each $modifier in (pull, push) {
        @for $i from 0 through $columns {
          .u-#{$modifier}-#{$i}\@#{$breakpoint} {
            @include make-col-modifier($modifier, $i, $columns)
          }
        }
      }

      // `$columns - 1` because offsetting by the width of an entire row
      // isn't possible
      @for $i from 0 through ($columns - 1) {
        @if $breakpoint-counter != 1 or $i != 0 {
          .u-offset-#{$i}\@#{$breakpoint} {
            @include make-col-modifier(offset, $i, $columns)
          }
        }
      }
    }
  }
}
